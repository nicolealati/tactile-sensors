// Generated by gencpp from file sensor_controller/Tare.msg
// DO NOT EDIT!


#ifndef SENSOR_CONTROLLER_MESSAGE_TARE_H
#define SENSOR_CONTROLLER_MESSAGE_TARE_H

#include <ros/service_traits.h>


#include <sensor_controller/TareRequest.h>
#include <sensor_controller/TareResponse.h>


namespace sensor_controller
{

struct Tare
{

typedef TareRequest Request;
typedef TareResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Tare
} // namespace sensor_controller


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::sensor_controller::Tare > {
  static const char* value()
  {
    return "87154d23082b63112945f24c169eef56";
  }

  static const char* value(const ::sensor_controller::Tare&) { return value(); }
};

template<>
struct DataType< ::sensor_controller::Tare > {
  static const char* value()
  {
    return "sensor_controller/Tare";
  }

  static const char* value(const ::sensor_controller::Tare&) { return value(); }
};


// service_traits::MD5Sum< ::sensor_controller::TareRequest> should match
// service_traits::MD5Sum< ::sensor_controller::Tare >
template<>
struct MD5Sum< ::sensor_controller::TareRequest>
{
  static const char* value()
  {
    return MD5Sum< ::sensor_controller::Tare >::value();
  }
  static const char* value(const ::sensor_controller::TareRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::sensor_controller::TareRequest> should match
// service_traits::DataType< ::sensor_controller::Tare >
template<>
struct DataType< ::sensor_controller::TareRequest>
{
  static const char* value()
  {
    return DataType< ::sensor_controller::Tare >::value();
  }
  static const char* value(const ::sensor_controller::TareRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::sensor_controller::TareResponse> should match
// service_traits::MD5Sum< ::sensor_controller::Tare >
template<>
struct MD5Sum< ::sensor_controller::TareResponse>
{
  static const char* value()
  {
    return MD5Sum< ::sensor_controller::Tare >::value();
  }
  static const char* value(const ::sensor_controller::TareResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::sensor_controller::TareResponse> should match
// service_traits::DataType< ::sensor_controller::Tare >
template<>
struct DataType< ::sensor_controller::TareResponse>
{
  static const char* value()
  {
    return DataType< ::sensor_controller::Tare >::value();
  }
  static const char* value(const ::sensor_controller::TareResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // SENSOR_CONTROLLER_MESSAGE_TARE_H
