// Generated by gencpp from file sensor_controller/Tared.msg
// DO NOT EDIT!


#ifndef SENSOR_CONTROLLER_MESSAGE_TARED_H
#define SENSOR_CONTROLLER_MESSAGE_TARED_H

#include <ros/service_traits.h>


#include <sensor_controller/TaredRequest.h>
#include <sensor_controller/TaredResponse.h>


namespace sensor_controller
{

struct Tared
{

typedef TaredRequest Request;
typedef TaredResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Tared
} // namespace sensor_controller


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::sensor_controller::Tared > {
  static const char* value()
  {
    return "0341f1ede20bbed8a60c8f16b685bca1";
  }

  static const char* value(const ::sensor_controller::Tared&) { return value(); }
};

template<>
struct DataType< ::sensor_controller::Tared > {
  static const char* value()
  {
    return "sensor_controller/Tared";
  }

  static const char* value(const ::sensor_controller::Tared&) { return value(); }
};


// service_traits::MD5Sum< ::sensor_controller::TaredRequest> should match
// service_traits::MD5Sum< ::sensor_controller::Tared >
template<>
struct MD5Sum< ::sensor_controller::TaredRequest>
{
  static const char* value()
  {
    return MD5Sum< ::sensor_controller::Tared >::value();
  }
  static const char* value(const ::sensor_controller::TaredRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::sensor_controller::TaredRequest> should match
// service_traits::DataType< ::sensor_controller::Tared >
template<>
struct DataType< ::sensor_controller::TaredRequest>
{
  static const char* value()
  {
    return DataType< ::sensor_controller::Tared >::value();
  }
  static const char* value(const ::sensor_controller::TaredRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::sensor_controller::TaredResponse> should match
// service_traits::MD5Sum< ::sensor_controller::Tared >
template<>
struct MD5Sum< ::sensor_controller::TaredResponse>
{
  static const char* value()
  {
    return MD5Sum< ::sensor_controller::Tared >::value();
  }
  static const char* value(const ::sensor_controller::TaredResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::sensor_controller::TaredResponse> should match
// service_traits::DataType< ::sensor_controller::Tared >
template<>
struct DataType< ::sensor_controller::TaredResponse>
{
  static const char* value()
  {
    return DataType< ::sensor_controller::Tared >::value();
  }
  static const char* value(const ::sensor_controller::TaredResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // SENSOR_CONTROLLER_MESSAGE_TARED_H
