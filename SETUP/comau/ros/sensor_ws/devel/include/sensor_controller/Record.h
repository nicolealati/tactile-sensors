// Generated by gencpp from file sensor_controller/Record.msg
// DO NOT EDIT!


#ifndef SENSOR_CONTROLLER_MESSAGE_RECORD_H
#define SENSOR_CONTROLLER_MESSAGE_RECORD_H

#include <ros/service_traits.h>


#include <sensor_controller/RecordRequest.h>
#include <sensor_controller/RecordResponse.h>


namespace sensor_controller
{

struct Record
{

typedef RecordRequest Request;
typedef RecordResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Record
} // namespace sensor_controller


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::sensor_controller::Record > {
  static const char* value()
  {
    return "bbb7ba84302b6f35af5466a95cd7ac90";
  }

  static const char* value(const ::sensor_controller::Record&) { return value(); }
};

template<>
struct DataType< ::sensor_controller::Record > {
  static const char* value()
  {
    return "sensor_controller/Record";
  }

  static const char* value(const ::sensor_controller::Record&) { return value(); }
};


// service_traits::MD5Sum< ::sensor_controller::RecordRequest> should match
// service_traits::MD5Sum< ::sensor_controller::Record >
template<>
struct MD5Sum< ::sensor_controller::RecordRequest>
{
  static const char* value()
  {
    return MD5Sum< ::sensor_controller::Record >::value();
  }
  static const char* value(const ::sensor_controller::RecordRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::sensor_controller::RecordRequest> should match
// service_traits::DataType< ::sensor_controller::Record >
template<>
struct DataType< ::sensor_controller::RecordRequest>
{
  static const char* value()
  {
    return DataType< ::sensor_controller::Record >::value();
  }
  static const char* value(const ::sensor_controller::RecordRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::sensor_controller::RecordResponse> should match
// service_traits::MD5Sum< ::sensor_controller::Record >
template<>
struct MD5Sum< ::sensor_controller::RecordResponse>
{
  static const char* value()
  {
    return MD5Sum< ::sensor_controller::Record >::value();
  }
  static const char* value(const ::sensor_controller::RecordResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::sensor_controller::RecordResponse> should match
// service_traits::DataType< ::sensor_controller::Record >
template<>
struct DataType< ::sensor_controller::RecordResponse>
{
  static const char* value()
  {
    return DataType< ::sensor_controller::Record >::value();
  }
  static const char* value(const ::sensor_controller::RecordResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // SENSOR_CONTROLLER_MESSAGE_RECORD_H
